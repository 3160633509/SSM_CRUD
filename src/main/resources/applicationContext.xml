<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
<!-- spring的配置文件  主要配置和业务逻辑有关的 -->
<!-- 1.扫描业务逻辑组件 -->
<context:component-scan base-package="com.atguigu">

	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>


<!-- 配置数据源 -->
<!-- 2.1引入我外部配置文件 -->
<context:property-placeholder location="classpath:dbconfig.properties"/>

<!-- 2.2 -->
<bean  id="pooleddatasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
	<property name="driverClass" value="${jdbc.driverClass}"></property>
	<property name="user" value="${jdbc.user}"></property>
	<property name="password" value="${jdbc.password}"></property>
</bean>



<!-- 3.配置和mybatis的整合 -->
<bean  id="sqlsessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

	<!-- 指定mybatis全局配置文件的位置 -->
	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	<!-- 指定数据源 -->
	<property name="dataSource" ref="pooleddatasource"></property>
	<!-- 指定mybatis的mapper文件的位置 -->
	<property name="mapperLocations" value="classpath:mapper/*.xml"></property>

</bean>




<!-- 4.配置扫描器，将mybatis的接口的实现加入到ioc容器中 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 扫描所有的dao接口的实现，加入到ioc容器中 -->
	<property name="basePackage" value="com.atguigu.crud.dao"></property>
</bean>



<!-- 5.事务控制的配置 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<!-- 控制数据源 -->
	<property name="dataSource" ref="pooleddatasource"></property>
</bean>


<!-- 6.开启基于注解的事务，重要的使用基于配置的事务控制，不重要的使用基于注解的事务控制 -->
<aop:config>
	<!-- 切入点表达式 -->
	<aop:pointcut expression="execution(* com.atguigu.crud.service..*(..))" id="txpoint"/>
	<!-- 配置事务增强 -->
	<aop:advisor advice-ref="txadvice" pointcut-ref="txpoint"/>
</aop:config>

<!-- 7.配置事务增强，事务如何切入 -->
<tx:advice id="txadvice" transaction-manager="transactionManager">
	<tx:attributes>
		<!-- 所有方法都是事务方法 -->
		<tx:method name="*"/>
		<!-- get开始的所有方法 -->
		<tx:method name="get*" read-only="true"/>
	</tx:attributes>
</tx:advice>







<!-- spring配置文件的核心关注的：数据源，与mybatis的整合，事务控制 -->






<!-- 配置一個可以批量的sqlsession -->
<bean id="SqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg name="sqlSessionFactory" ref="sqlsessionFactory"></constructor-arg>
	<constructor-arg name="executorType" value="BATCH"></constructor-arg>
</bean>





</beans>
